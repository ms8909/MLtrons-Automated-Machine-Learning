# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-12-30 11:53
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mlbot_webservices.shared_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('file_url', models.FileField(upload_to=mlbot_webservices.shared_utils.UploadToPathAndRename('/User/Datasets'))),
                ('status', models.CharField(choices=[('UnProcessed', 'UnProcessed'), ('Processed', 'Processed')], default='UnProcessed', max_length=37)),
                ('size', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ForecastDuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('minutes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ForecastGroupBy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('minutes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Graph',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('End_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GraphType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MergeColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_name', models.CharField(max_length=256)),
                ('min', models.FloatField(default=0.0)),
                ('max', models.FloatField(default=0.0)),
                ('missing', models.FloatField(default=0.0)),
                ('count', models.IntegerField(default=0)),
                ('mean', models.FloatField(default=0.0)),
                ('mode', models.CharField(blank=True, max_length=100, null=True)),
                ('distribution_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaImputation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MetaRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MetaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='PredictionValues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('file_url', models.FileField(upload_to=mlbot_webservices.shared_utils.UploadToPathAndRename('/User/Predictions'))),
            ],
        ),
        migrations.CreateModel(
            name='ProblemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Running', 'Running'), ('Completed', 'Completed')], default='Pending', max_length=37)),
                ('name', models.CharField(max_length=256)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('forecast_duration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.ForecastDuration')),
                ('forecast_group_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.ForecastGroupBy')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Metric')),
                ('problem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.ProblemType')),
                ('processed_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.DataSet')),
                ('y_yariable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Meta')),
            ],
        ),
        migrations.AddField(
            model_name='predictionvalues',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
        migrations.AddField(
            model_name='predictionvalues',
            name='y_yariable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Meta'),
        ),
        migrations.AddField(
            model_name='meta',
            name='imputation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.MetaImputation'),
        ),
        migrations.AddField(
            model_name='meta',
            name='processed_data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metas', to='project.DataSet'),
        ),
        migrations.AddField(
            model_name='meta',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.MetaRole'),
        ),
        migrations.AddField(
            model_name='meta',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.MetaType'),
        ),
        migrations.AddField(
            model_name='mergecolumn',
            name='from_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_meta', to='project.Meta'),
        ),
        migrations.AddField(
            model_name='mergecolumn',
            name='to_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_meta', to='project.Meta'),
        ),
        migrations.AddField(
            model_name='graph',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
        migrations.AddField(
            model_name='graph',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.GraphType'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='project.Project'),
        ),
    ]
